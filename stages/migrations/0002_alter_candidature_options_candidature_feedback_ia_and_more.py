# Generated by Django 5.2.3 on 2025-06-18 20:47

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stages', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='candidature',
            options={'ordering': ['-score_ia', '-date_postulation']},
        ),
        migrations.AddField(
            model_name='candidature',
            name='feedback_ia',
            field=models.TextField(blank=True, help_text="Feedback généré par l'IA", null=True),
        ),
        migrations.AddField(
            model_name='candidature',
            name='score_ia',
            field=models.FloatField(blank=True, help_text="Score de correspondance calculé par l'IA", null=True),
        ),
        migrations.AddField(
            model_name='offredestage',
            name='est_valide',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='offredestage',
            name='gratification',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AddField(
            model_name='offredestage',
            name='nombre_places',
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name='offredestage',
            name='type_stage',
            field=models.CharField(choices=[('obligatoire', 'Stage obligatoire'), ('facultatif', 'Stage facultatif'), ('alternance', "Contrat d'alternance")], default='obligatoire', max_length=20),
        ),
        migrations.AlterField(
            model_name='candidature',
            name='statut',
            field=models.CharField(choices=[('en_attente', 'En attente'), ('acceptee', 'Acceptée'), ('refusee', 'Refusée'), ('en_entretien', 'En entretien')], default='en_attente', max_length=20),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='role',
            field=models.CharField(choices=[('admin', 'Admin'), ('entreprise', 'Entreprise'), ('etudiant', 'Étudiant'), ('enseignant', 'Enseignant')], max_length=20),
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('specialite', models.CharField(max_length=100)),
                ('departement', models.CharField(max_length=100)),
                ('est_valide', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConventionDeStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('heures_semaine', models.PositiveIntegerField()),
                ('gratification', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tuteur_entreprise', models.CharField(max_length=100)),
                ('email_tuteur', models.EmailField(max_length=254)),
                ('telephone_tuteur', models.CharField(max_length=20)),
                ('statut', models.CharField(choices=[('brouillon', 'Brouillon'), ('en_attente', 'En attente de validation'), ('validee', 'Validée'), ('refusee', 'Refusée')], default='brouillon', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_validation', models.DateTimeField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, upload_to='conventions/')),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('entreprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stages.entreprise')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stages.etudiant')),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stages.offredestage')),
                ('enseignant_referent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stages.enseignant')),
            ],
        ),
        migrations.AddField(
            model_name='etudiant',
            name='enseignant_referent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stages.enseignant'),
        ),
        migrations.CreateModel(
            name='EvaluationStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_evaluation', models.DateField(auto_now_add=True)),
                ('satisfaction_globale', models.PositiveIntegerField(help_text='1 = Très insatisfait, 5 = Très satisfait', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('acquis_professionnels', models.TextField()),
                ('points_positifs', models.TextField()),
                ('points_amelioration', models.TextField()),
                ('recommandation_entreprise', models.BooleanField(default=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
                ('convention', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='stages.conventiondestage')),
            ],
        ),
        migrations.CreateModel(
            name='Memoire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('resume', models.TextField()),
                ('mots_cles', models.CharField(max_length=200)),
                ('document', models.FileField(upload_to='memoires/')),
                ('date_depot', models.DateTimeField(auto_now_add=True)),
                ('date_soutenance', models.DateField(blank=True, null=True)),
                ('note', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('est_public', models.BooleanField(default=False)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stages.etudiant')),
                ('jury', models.ManyToManyField(blank=True, to='stages.enseignant')),
            ],
        ),
        migrations.CreateModel(
            name='SuiviStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rapport', models.DateField()),
                ('type_rapport', models.CharField(choices=[('intermediaire', 'Rapport intermédiaire'), ('final', 'Rapport final'), ('visite', 'Compte-rendu de visite')], max_length=50)),
                ('document', models.FileField(upload_to='suivis_stage/')),
                ('commentaires', models.TextField()),
                ('note', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('convention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stages.conventiondestage')),
            ],
            options={
                'ordering': ['-date_rapport'],
            },
        ),
    ]
